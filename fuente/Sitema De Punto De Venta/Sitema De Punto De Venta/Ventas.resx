<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>